/**
 * This file was generated by the JPA Modeler
 */

package de.calendar.model;

import de.calendar.utils.CalendarUtils;

import javax.persistence.Column;
import javax.persistence.Embeddable;
import javax.validation.constraints.Size;
import java.io.Serializable;
import java.time.LocalDateTime;

/**
 * Das ist der Token f√ºr den User zum identifizieren.
 *
 * @author KAABERT
 */

@Embeddable
public class Token implements Serializable {

    @Column(unique = true, name = "c_value")
    @Size(min = 24, max = 48)
    private String value;

    @Column(name = "c_expiringDate")
    private String expiringDate;

    @Deprecated
    public Token() {
    }

    public Token(String value, LocalDateTime expiringDate) {
        this.value = value;
        this.expiringDate = CalendarUtils.format(expiringDate);

    }

    public String getValue() {
        return this.value;
    }

    public void setValue(String value) {
        this.value = value;
    }

    public String getExpiringDate() {
        return this.expiringDate;
    }

    public void setExpiringDate(String expiringDate) {
        this.expiringDate = expiringDate;
    }

    @Override
    public String toString() {
        return "Token{" + " value=" + value + ", expiringDate=" + expiringDate + '}';
    }

    public boolean isExpired() {
        LocalDateTime expiringDate = CalendarUtils.parse(this.expiringDate);
        return expiringDate == null || LocalDateTime.now().isAfter(expiringDate);
    }
}
