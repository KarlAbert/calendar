/**
 * This file was generated by the JPA Modeler
 */

package de.calendar.model;

import org.json.JSONObject;

import javax.persistence.*;
import javax.validation.constraints.Size;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

/**
 * Hier sind die Stammdaten eines Users gespeichert
 *
 * @author KAABERT
 */

@Entity
@Table(name = "c_user")
public class User implements Serializable {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;

    @Column(name = "c_firstname")
    @Size(min = 3, max = 25)
    private String firstname;

    @Column(name = "c_lastname")
    @Size(min = 3, max = 25)
    private String lastname;

    @Column(unique = true, name = "c_username")
    @Size(min = 3, max = 25)
    private String username;

    @Column(unique = true, name = "c_email")
    private String email;

    @Column(name = "c_password")
    @Size(min = 8)
    private String password;

    @Embedded
    private Token token;

    @ManyToMany(fetch = FetchType.LAZY, targetEntity = Event.class, mappedBy = "owner")
    private List<Event> owningevents;

    @ManyToMany(fetch = FetchType.LAZY, targetEntity = Event.class)
    private List<Event> subscriptions;

    @Deprecated
    public User() {
    }

    public User(String firstname, String lastname, String username, String email, String password) {
        this.firstname = firstname;
        this.lastname = lastname;
        this.username = username;
        this.email = email;
        this.password = password;

        this.subscriptions = new ArrayList<>();
        this.owningevents = new ArrayList<>();
    }

    public User(JSONObject data) {
        this(
                data.getString("firstname"),
                data.getString("lastname"),
                data.getString("username"),
                data.getString("email"),
                data.getString("password")
        );
    }

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getFirstname() {
        return this.firstname;
    }

    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    public String getLastname() {
        return this.lastname;
    }

    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    public String getUsername() {
        return this.username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getPassword() {
        return this.password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public Token getToken() {
        return this.token;
    }

    public void setToken(Token token) {
        this.token = token;
    }

    public List<Event> getOwningevents() {
        return this.owningevents;
    }

    public void setOwningevents(List<Event> owningevents) {
        this.owningevents = owningevents;
    }

    public List<Event> getSubscriptions() {
        return this.subscriptions;
    }

    public void setSubscriptions(List<Event> subscriptions) {
        this.subscriptions = subscriptions;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (!java.util.Objects.equals(getClass(), obj.getClass())) {
            return false;
        }
        final User other = (User) obj;
        if (!java.util.Objects.equals(this.getFirstname(), other.getFirstname())) {
            return false;
        }
        if (!java.util.Objects.equals(this.getLastname(), other.getLastname())) {
            return false;
        }
        if (!java.util.Objects.equals(this.getUsername(), other.getUsername())) {
            return false;
        }
        if (!java.util.Objects.equals(this.getEmail(), other.getEmail())) {
            return false;
        }
        if (!java.util.Objects.equals(this.getPassword(), other.getPassword())) {
            return false;
        }
        if (!java.util.Objects.equals(this.getToken(), other.getToken())) {
            return false;
        }
        if (!java.util.Objects.equals(this.getOwningevents(), other.getOwningevents())) {
            return false;
        }
        if (!java.util.Objects.equals(this.getSubscriptions(), other.getSubscriptions())) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        int hash = 5;
        hash = 97 * hash + (this.getFirstname() != null ? this.getFirstname().hashCode() : 0);
        hash = 97 * hash + (this.getLastname() != null ? this.getLastname().hashCode() : 0);
        hash = 97 * hash + (this.getUsername() != null ? this.getUsername().hashCode() : 0);
        hash = 97 * hash + (this.getEmail() != null ? this.getEmail().hashCode() : 0);
        hash = 97 * hash + (this.getPassword() != null ? this.getPassword().hashCode() : 0);
        hash = 97 * hash + (this.getToken() != null ? this.getToken().hashCode() : 0);
        hash = 97 * hash + (this.getOwningevents() != null ? this.getOwningevents().hashCode() : 0);
        hash = 97 * hash + (this.getSubscriptions() != null ? this.getSubscriptions().hashCode() : 0);
        return hash;
    }

    @Override
    public String toString() {
        return "User{" + " firstname=" + firstname + ", lastname=" + lastname + ", username=" + username + ", email=" + email + '}';
    }

}
